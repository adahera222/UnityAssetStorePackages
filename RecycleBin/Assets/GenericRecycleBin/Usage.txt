Generic Recycle BinThis is a really simple script to use. If you drag the script "RecycleBin" onto a game object,you can specify the default amount of objects to create. But this isn't needed. It will defaultto 10, and if called an instance will be created automatically.UsageCUSTOM SETUP	First off your script of the object needs to inherit from RecyclableGameObject, otherwise it	will give you a compile error. This ensures that your script inherits from MonoBehaviour.	It also exposes the method "Recycle", which will send your object back to the RecycleBin in	a deactivated state. You can override this method to do any special cleanup your script requires as well.	Example - In the demo the "Projectile" script overrides the Recyle method to reset the constantforce.	MAKE SURE YOU CALL base.Recyle() if you do this, or else the object will not be deactivated properly.CREATE	To create a new Recyclable object, you need to call the method		RecycleBin.CreateNewRecylable<YOURSCRIPTNAME>(prefabOfYourScriptType, 5);	You do not need to add a prefab. In the case of the soccer demo, I do because its simpler. If you don't	then it will create a new gameObject with your script attached. The second argument is an override of the	default number it will spawn. Again this is not needed.ACCESSING	To access a pooled object, just call the method		RecycleBin.GetFreeObject<YOURSCRIPTNAME>();		This will find a free object of that type. If there are no free objects, it will create one based on the prefab	you supplied when you created the Recyclable, or if you didn't supply one it will create a new gameObject with	your script attached.Thats it!